// 
// Buttons Themes and Styles
// ========================

// Button Theme
@mixin theme-button-default(
	$bgcolor: $button-bgcolor,
	$color: $button-color,
	$border-color: delta-darken($bgcolor),
	$bgcolor-hover: delta-lighten($bgcolor),
	$color-hover: $color,
	$border-color-hover: delta-darken($bgcolor-hover)
) {
	@if $border-color { border-color: $border-color; }
	@if $bgcolor { background-color: $bgcolor; }
	@if $color {
		&, & > * { color: $color; }
	}

	&:disabled {
		// TODO
		@if $border-color { border-color: $border-color !important; }
		@if $bgcolor { background-color: $bgcolor !important; }
		@if $color {
			&, & > * { color: $color; }
		}
	}

	&:hover, &:active {
		@if $border-color-hover { border-color: $border-color-hover; }
		@if $bgcolor-hover { background-color: $bgcolor-hover; }
		@if $color-hover {
			&, & > * { color: $color-hover; }
		}
	}

	&:focus {
		outline: 1px solid white;
		outline-offset: -2px;
	}
}

@mixin theme-button-transparent(
	$border-color: $button-bgcolor,
	$color: $border-color,
	$bgcolor: rgba($border-color, 0),
	$border-color-hover: $border-color,
	$color-hover: $button-color-dark,
	$bgcolor-hover: $border-color
) {
	@include theme-button-default(
		$bgcolor,
		$color,
		$border-color,
		$bgcolor-hover,
		$color-hover,
		$border-color-hover
	);
}

%theme-button-default {
	&, & > * { @extend %transition; }
	@include theme-button-default();

	&-primary { @include theme-button-default($color-primary); }
	&-secondary { @include theme-button-default($color-secondary); }
	&-light { @include theme-button-default($button-bgcolor-light, $button-color-light); }
	&-dark { @include theme-button-default($button-bgcolor-dark, $button-color-dark); }

	&-success { @include theme-button-default($color-success); }
	&-warning { @include theme-button-default($color-warning); }
	&-failure { @include theme-button-default($color-failure); }

	&-lighten { @include theme-button-default($color-lighten); }
	&-darken { @include theme-button-default($color-darken); }

	&-link { @include theme-button-default(false, false); }
}

%theme-button-transparent {
	@include transition((border-color, background-color, color));
	@include theme-button-transparent();

	&-primary { @include theme-button-transparent($color-primary); }
	&-secondary { @include theme-button-transparent($color-secondary); }
	&-light { @include theme-button-transparent($color-light, $color-hover: $button-color-light); }
	&-dark { @include theme-button-transparent($color-dark, $color-hover: $button-color-dark); }

	&-success { @include theme-button-transparent($color-success); }
	&-warning { @include theme-button-transparent($color-warning); }
	&-failure { @include theme-button-transparent($color-failure); }

	&-lighten { @include theme-button-transparent($color-lighten, $border-color-hover: rgba($color-lighten, 0)); }
	&-darken { @include theme-button-transparent($color-darken, $border-color-hover: rgba($color-darken, 0)); }
}

@mixin theme-button-pseudo(
	$bgcolor: transparent,
	$bgcolor-hover: $button-bgcolor,
	$transition: 'slideUp'
) {
	background-color: transparent;
	z-index: 1;

	&:after {
		@extend %pseudo-layer;
		@include move-on(':hover', $transition);

		background-color: $bgcolor-hover;
		z-index: -1;
	}

	&:hover {
		background-color: transparent;
	}
}

%theme-button-pseudo {
	@include theme-button-pseudo;
}

