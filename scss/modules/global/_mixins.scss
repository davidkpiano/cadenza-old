// 
// Global Mixins and Functions
// ===========================

// TODO: use Sass 3.3 maps
@mixin add-theme(
    $module,
    $theme: 'default'
) {
    $themes: append($themes, ($module, $theme));
}

@mixin theme($color) {
    @include foreground-color($color);

    background-color: $color;
}

// Transition Mixin
@mixin transition(
    $property: all,
    $transition-duration: $transition-duration,
    $transition-timing-function: $transition-timing-function
) {
    @include transition-property($property);
    @include transition-duration($transition-duration);
    @include transition-timing-function($transition-timing-function);
}

@mixin translate(
    $horizontal: false,
    $vertical: false
) {
    @if $vertical and $horizontal {
        @include experimental(transform, translateX($horizontal) translateY($vertical));
    } @else {    
        @if $vertical {
            @include experimental(transform, translateY($vertical));
        }

        @if $horizontal {
            @include experimental(transform, translateX($horizontal));
        }
    }
}

@mixin valign($position, $selector: false) {
    display: table;

    $_selector: '> * ';

    @if $selector {
        $_selector: $selector;
    }

    #{$_selector} {
        display: table-cell;
        vertical-align: $position;
    }
}

@mixin valign-all($position, $selector: false) {
    > * {
        @include valign($position, $selector);
    }
}

@function column-width(
    $columns,
    $gutter: false
) {
    // if $columns is an int, calculate from $grid-columns
    @if round($columns) == $columns and unit($columns) == '' {

        @if $gutter {
            @return calc(#{$columns} * ((100% - #{$gutter * ($grid-columns - 1)}) / #{$grid-columns}) + (#{($columns - 1) * $gutter}));
        } @else {
            @return percentage($columns / $grid-columns);
        }
    } @else if index(('%', 'px', 'em', 'rem'), unit($columns)) {
        @return $columns;
    } @else {
        @return percentage($columns);
    }
}

@function column-offset-width(
    $columns,
    $gutter: false
) {
    // if $columns is an int, calculate from $grid-columns
    @if round($columns) == $columns and unit($columns) == '' {

        @if $gutter {
            @return calc(#{$columns} * ((100% - #{$gutter * ($grid-columns - 1)}) / #{$grid-columns}) + (#{$columns * $gutter}));
        } @else {
            @return column-width($columns);
        }
    } @else {
        @return column-width($columns);
    }
}

@function row-height($rows) {
    // This is (currently) the same result as column-width
    @return column-width($rows);
}

