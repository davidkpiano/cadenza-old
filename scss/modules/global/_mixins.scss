// 
// Global Mixins and Functions
// ===========================

// TODO: use Sass 3.3 maps
@mixin add-theme(
    $module,
    $theme: 'default'
) {
    $themes: append($themes, ($module, $theme));
}

@mixin theme($color) {
    @include foreground-color($color);

    background-color: $color;
}

@mixin foreground-color(
    $color, 
    $darken: 35%, 
    $threshold: 65%, 
    $color-light: $type-base-color-light, 
    $color-dark: $type-base-color-dark,
    $color-default: inherit,
    $component: 'all'
) {
    $_color: $color-default !default;

    @if type-of($color) == color {
        @if lightness($color) > $threshold {
            @if ($component == 'type' or $component == 'all') {
                &, p, li, span { color: $color-dark; }
            }
            @if ($component == 'heading' or $component == 'all') {
                %heading { color: $type-heading-color-dark; }
            }
            @if ($component == 'anchor' or $component == 'all') {
                %anchor { @extend %anchor-dark; }
            }
        } @else {
            @if ($component == 'type' or $component == 'all') {
                &, p, li, span { color: $color-light; }
            }
            @if ($component == 'heading' or $component == 'all') {
                %heading { color: $type-heading-color-light; }
            }
            @if ($component == 'anchor' or $component == 'all') {
                %anchor { @extend %anchor-light; }
            }
        }
    } @else if $color == static or $color == transparent {
        $_color: false;
    } @else {
        $_color: $color-default;
    }
}

@mixin translate(
    $horizontal: false,
    $vertical: false
) {
    @if $vertical and $horizontal {
        @include experimental(transform, translateX($horizontal) translateY($vertical));
    } @else {    
        @if $vertical {
            @include experimental(transform, translateY($vertical));
        }

        @if $horizontal {
            @include experimental(transform, translateX($horizontal));
        }
    }
}

@mixin position-absolute(
    $vertical: false,
    $horizontal: false,
    $top: false,
    $bottom: false,
    $left: false,
    $right: false
) {
    position: absolute;

    @if $vertical {    
        @if $vertical == top {
            top: 0;
            bottom: inherit;
        }
        @else if $vertical == bottom {
            bottom: 0;
            top: inherit;
        }
        @else if $vertical == below {
            top: 100%;
            bottom: inherit;
        }
        @else if $vertical == above {
            bottom: 100%;
            top: inherit;
        }
        @else if $vertical == center {
            top: 50%;
            @include experimental(transform, translateY(-50%));
            bottom: inherit;
        }
        @else {
            top: $vertical;
            bottom: inherit;
        }
    }

    @if $horizontal {
        @if $horizontal == left { 
            left: 0;
            right: inherit;
        }
        @else if $horizontal == right {
            right: 0;
            left: inherit;
        }
        @else if $horizontal == center {
            left: 50%;
            @include experimental(transform, translateX(-50%));
        }
        @else { left: $horizontal; }
    }

    @if $top {
        top: $top;
        bottom: inherit;
    }

    @if $bottom {
        bottom: $bottom;
        top: inherit;
    }

    @if $left {
        left: $left;
        right: inherit;
    }

    @if $right {
        right: $right;
        left: inherit;
    }
}

