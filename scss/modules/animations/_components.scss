// 
// Animations Components
// =====================

// Active States
// -------------

%active-delay {
    &#{$active-selector} {
        animation-delay: $active-delay !important;
    }
}

// Animations
// ----------
@include define-component('animation', (
    animation-duration: $animation-duration,
    animation-direction: $animation-direction,
    animation-delay: $animation-delay,
    animation-iteration-count: $animation-iteration-count,
    animation-play-state: $animation-play-state,
    animation-timing-function: $animation-timing-function,
    animation-fill-mode: $animation-fill-mode,
)) {
    @include define-variant('inert', (
        animation: none !important,
    ));

    @include define-variant('active', (
        z-index: 2,
    ));

    @include define-variant('inactive', (
        z-index: 0,
    ));

    @include define-variant('delay', (
        animation-delay: $active-delay !important,
    ));

    @include define-variant('3d', (
        animation-duration: $animation-3d-duration,
        perspective: $animation-3d-perspective,
        transform-style: preserve-3d,
        backface-visibility: hidden,
        transform: 
            translateX(0)
            translateY(0)
            translateZ(0),
    ));
}


// Fade
%animation-fade-active { @include animation(fade-active, $extend: false); }
%animation-fade-inactive { @include animation(fade-inactive, $extend: false); }
@include keyframes(fade-active) {
    from { opacity: 0; }
    to { opacity: 1; }
}
@include keyframes(fade-inactive) {
    from { opacity: 1; }
    to { opacity: 0; }
}

// Fade In
%animation-fadeIn-active { @include animation(fade-active, $extend: false); }
%animation-fadeIn-inactive { @include animation(fadeIn-inactive, $extend: false); }
@include keyframes(fadeIn-inactive) {
    from, to { opacity: 0; }
}

// Scale Up / Scale Up
%animation-scaleUp-active { @include animation(scaleUp-active, $extend: false); }
%animation-scaleUp-inactive { @include animation(scaleUp-inactive, $extend: false); }
@include keyframes(scaleUp-active) {
    from {
    	opacity: 0;
    	transform: scale(0.8);
    }
    to {
    	opacity: 1;
    	transform: scale(1);
    }
}
@include keyframes(scaleUp-inactive) {
    from {
    	opacity: 1;
    	transform: scale(1);
    }
    to {
    	opacity: 0;
    	transform: scale(1.2);
    }
}

// Scale Down / Scale Down
%animation-scaleDown-active { @include animation(scaleDown-active, $extend: false); }
%animation-scaleDown-inactive { @include animation(scaleDown-inactive, $extend: false); }
@include keyframes(scaleDown-active) {
    from {
    	opacity: 0;
    	-webkit-transform: scale(1.2);
    }
    to {
    	opacity: 1;
    	-webkit-transform: scale(1);
    }
}
@include keyframes(scaleDown-inactive) {
    from {
    	opacity: 1;
    	-webkit-transform: scale(1);
    }
    to {
    	opacity: 0;
    	-webkit-transform: scale(0.8);
    }
}

// Scale Up / Scale Down
%animation-scaleUpDown-active { @include animation(scaleUpDown-active, $extend: false); }
%animation-scaleUpDown-inactive { @include animation(scaleUpDown-inactive, $extend: false); }
@include keyframes(scaleUpDown-active) {
    from {
    	opacity: 0;
    	transform: scale(0.8);
    }
    to {
    	opacity: 1;
    	transform: scale(1);
    }
}
@include keyframes(scaleUpDown-inactive) {
    from {
    	opacity: 1;
    	transform: scale(1);
    }
    to {
    	opacity: 0;
    	transform: scale(0.8);
    }
}

// Scale Down / Scale Up
%animation-scaleDownUp-active { @include animation(scaleDownUp-active, $extend: false); }
%animation-scaleDownUp-inactive { @include animation(scaleDownUp-inactive, $extend: false); }
@include keyframes(scaleDownUp-active) {
    from {
    	opacity: 0;
    	transform: scale(1.2);
    }
    to {
    	opacity: 1;
    	transform: scale(1);
    }
}
@include keyframes(scaleDownUp-inactive) {
    from {
    	opacity: 1;
    	transform: scale(1.2);
    }
    to {
    	opacity: 0;
    	transform: scale(1);
    }
}

// Slide Left
%animation-slideLeft-active { @include animation(slideLeft-active, $extend: false); }
%animation-slideLeft-inactive { @include animation(slideLeft-inactive, $extend: false); }
@include keyframes(slideLeft-active) {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
}
@include keyframes(slideLeft-inactive) {
    from { transform: translateX(0); }
    to { transform: translateX(-100%); }
}

// Slide Right
%animation-slideRight-active { @include animation(slideRight-active, $extend: false); }
%animation-slideRight-inactive { @include animation(slideRight-inactive, $extend: false); }
@include keyframes(slideRight-active) {
    from { transform: translateX(-100%); }
    to { transform: translateX(0); }
}
@include keyframes(slideRight-inactive) {
    from { transform: translateX(0); }
    to { transform: translateX(100%); }
}

// Slide Up
%animation-slideUp-active { @include animation(slideUp-active, $extend: false); }
%animation-slideUp-inactive { @include animation(slideUp-inactive, $extend: false); }
@include keyframes(slideUp-active) {
    from { transform: translateY(100%); }
    to { transform: translateY(0); }
}
@include keyframes(slideUp-inactive) {
    from { transform: translateY(0); }
    to { transform: translateY(-100%); }
}

// Slide Down
%animation-slideDown-active { @include animation(slideDown-active, $extend: false); }
%animation-slideDown-inactive { @include animation(slideDown-inactive, $extend: false); }
@include keyframes(slideDown-active) {
    from { transform: translateY(-100%); }
    to { transform: translateY(0); }
}
@include keyframes(slideDown-inactive) {
    from { transform: translateY(0); }
    to { transform: translateY(100%); }
}

// Slide Up/Down
%animation-slideUpDown-active { @include animation(slideUpDown-active, $extend: false); }
%animation-slideUpDown-inactive { @include animation(slideUpDown-inactive, $extend: false); }
@include keyframes(slideUpDown-active) {
    from { transform: translateY(100%); }
    to { transform: translateY(0); }
}
@include keyframes(slideUpDown-inactive) {
    from { transform: translateY(0); }
    to { transform: translateY(100%); }
}

// Slide Down/Up
%animation-slideDownUp-active { @include animation(slideDownUp-active, $extend: false); }
%animation-slideDownUp-inactive { @include animation(slideDownUp-inactive, $extend: false); }
@include keyframes(slideDownUp-active) {
    from { transform: translateY(-100%); }
    to { transform: translateY(0); }
}
@include keyframes(slideDownUp-inactive) {
    from { transform: translateY(0); }
    to { transform: translateY(-100%); }
}

// Shift Up
%animation-shiftUp-active { @include animation(shiftUp-active, $extend: false); }
%animation-shiftUp-inactive { @include animation(shiftUp-inactive, $extend: false); }
@include keyframes(shiftUp-active) {
    from { 
        transform: translateY($animation-delta);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}
@include keyframes(shiftUp-inactive) {
    from {
        transform: translateY(0);
        opacity: 1;
    }
    to {
        transform: translateY(-$animation-delta);
        opacity: 0;
    }
}

// Shift Down
%animation-shiftDown-active { @include animation(shiftDown-active, $extend: false); }
%animation-shiftDown-inactive { @include animation(shiftDown-inactive, $extend: false); }
@include keyframes(shiftDown-active) {
    from { 
        transform: translateY(-$animation-delta);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}
@include keyframes(shiftDown-inactive) {
    from {
        transform: translateY(0);
        opacity: 1;
    }
    to {
        transform: translateY($animation-delta);
        opacity: 0;
    }
}

// Shift Left
%animation-shiftLeft-active { @include animation(shiftLeft-active, $extend: false); }
%animation-shiftLeft-inactive { @include animation(shiftLeft-inactive, $extend: false); }
@include keyframes(shiftLeft-active) {
    from { 
        transform: translateX($animation-delta);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}
@include keyframes(shiftLeft-inactive) {
    from {
        transform: translateX(0);
        opacity: 1;
    }
    to {
        transform: translateX(-$animation-delta);
        opacity: 0;
    }
}

// Shift Right
%animation-shiftRight-active { @include animation(shiftRight-active, $extend: false); }
%animation-shiftRight-inactive { @include animation(shiftRight-inactive, $extend: false); }
@include keyframes(shiftRight-active) {
    from { 
        transform: translateX(-$animation-delta);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}
@include keyframes(shiftRight-inactive) {
    from {
        transform: translateX(0);
        opacity: 1;
    }
    to {
        transform: translateX($animation-delta);
        opacity: 0;
    }
}

// Flip Left
%animation-flipLeft-active { @include animation(flipLeft-active, $is-3d: true, $extend: false); }
%animation-flipLeft-inactive { @include animation(flipLeft-inactive, $is-3d: true, $extend: false); }
@include keyframes(flipLeft-active) {
    from { z-index: 1; transform: translateZ(-1000px) rotateY(180deg); }
    to { z-index: 2; transform: translateZ(0) rotateY(0); }
}
@include keyframes(flipLeft-inactive) {
    from {
    	z-index: 2;
    	transform: translateZ(0) rotateY(0);
    }
    to {
    	z-index: 1;
    	transform: translateZ(-1000px) rotateY(-180deg);
    }
}

// Tilt
%animation-tilt-active { @include animation(tilt-active, $is-3d: true, $extend: false); }
%animation-tilt-inactive { @include animation(tilt-inactive, $is-3d: true, $extend: false); }
@include keyframes(tilt-active) {
    0% {
        transform: translateZ(-500px) rotateY(0deg);
        opacity: 0;
    }
    20% {
        transform: translateZ(-250px) rotateY(30deg);
        opacity: 0.5;
    }
    100% {
        transform: translateZ(0px) rotateY(0deg);
        opacity: 1;
    }
}
@include keyframes(tilt-inactive) {
    50% {
        transform: translateZ(-250px) rotateY(30deg);
    }
    75% {
        transform: translateZ(-372.5px) rotateY(15deg);
        opacity: .5;
    }
    100% {
        transform: translateZ(-500px) rotateY(0deg);
        opacity: 0;
    }
}

// Transitions
// -----------
%hover-all {

}

%transition {
    transition-property: $transition-property;
    transition-duration: $transition-duration;
    transition-timing-function: $transition-timing-function;
    transition-delay: $transition-delay;
}

%transition-fadeIn-inactive { opacity: 0; }
%transition-fadeIn-active { opacity: 1; }

%transition-slideUp-inactive { transform: translateY(100%); }
%transition-slideUp-active { transform: translateY(0); }

%transition-scaleIn-inactive { transform: scale(0); }
%transition-scaleIn-active { transform: scale(1); }

%transition-origin-active {
    transform: translateX(0) translateY(0);
    transform: translate3d(0, 0, 0);
}

%transition-lighten {
    @include movement() {
        opacity: 1 - $transition-delta-opacity;
    }
}
%hover-lighten { @include hover-movement(lighten); }

%transition-fromLight {
    opacity: 1 - $transition-delta-opacity;

    @include movement() {
        opacity: 1;
    }
}
%hover-fromLight { @include hover-movement(fromLight); }

%transition-scaleUp {
    @include movement(transform) {
        transform: scale(1.2);
    }
}
%hover-scaleUp { @include hover-movement(scaleUp); }

%transition-slideFromLeft {
    transform: translateX(-100%);

    @include movement() {
        transform: translateX(0);
    }
}
.transition-slideFromLeft { @extend %transition-slideFromLeft; }
