// 
// Animations Mixins and Functions
// ===============================

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}

@mixin animation(
    $name,
    $duration: $animation-duration,
    $direction: default,
    $delay: default,
    $iteration-count: default,
    $play-state: default,
    $timing-function: default,
    $fill-mode: default,
    $is-3d: false
) {
    @extend %animation;

    @if $is-3d {
        @extend %animation-3d;
    }

    @include animation-name($name);

    @if $duration != default {
        @include animation-duration($duration);
    }

    @if $direction != default {
        @include animation-direction($direction);
    }

    @if $delay != default {
        @include animation-delay($delay);
    }

    @if $iteration-count != default {
        @include animation-iteration-count($iteration-count);
    }

    @if $play-state != default {
        @include animation-play-state($play-state);
    }

    @if $timing-function != default {
        @include animation-timing-function($timing-function);
    }

    @if $fill-mode != default {
        @include animation-fill-mode($fill-mode);
    }
}

@mixin movement(
    $property: default,
    $selector: $transition-selector,
    $duration: default,
    $timing-function: default,
    $delay: default,
    $parent-hover: true
) {
    @if $property != default { @include transition-property($property); }
    @if $duration != default { @include transition-duration($duration); }
    @if $timing-function != default { @include transition-timing-function($timing-function); }
    @if $delay != default { @include transition-delay($delay); }

    @if $parent-hover {    
        &#{$selector}, %hover-all:hover > & {
            @content;
        }
    } @else {
        &#{$selector} {
            @content;
        }
    }
}

@mixin hover-movement($name) {
    @extend %transition-#{$name};

    &:hover { @extend %transition-#{$name}#{$transition-selector}; }
}

@mixin activate(
	$active-name,
	$inactive-name: $active-name,
	$active-selector: $active-selector,
	$inactive-selector: $inactive-selector,
	$inert-selector: $inert-selector
) {
    @extend %animation-#{$active-name}-inert !optional;

    &#{$inert-selector} {
    	@extend %inert;
    }

    &#{$active-selector} {
    	@extend %animation-#{$active-name}-active !optional;
    	@extend %active;
    }
    &#{$inactive-selector} {
    	@extend %animation-#{$inactive-name}-inactive !optional;
    	@extend %inactive;
	}
}

@mixin activate-hover($settings...) {
    $settings: map-merge(keywords($settings), (active-selector: ':hover'));

    @include activate($settings...);
}

@mixin activate-all(
	$active-name,
	$inactive-name: $active-name,
	$selector: $activation-item-selector,
	$active-selector: $active-selector,
	$inactive-selector: $inactive-selector,
	$inert-selector: $inert-selector,
	$is-3d: false
) {
	@if $is-3d {
		@extend %animation-3d;
	}

    &#{$inert-selector} {
    	@extend %inert;
    }

    > #{$selector} {
        @extend %animation-#{$active-name}-inert !optional;


        &#{$active-selector} {
        	@extend %animation-#{$active-name}-active !optional;
        	@extend %active;
        }

        &#{$inactive-selector} {
        	@extend %animation-#{$inactive-name}-inactive !optional;
        	@extend %inactive;
        }
    }
}

@mixin performance($active-selector: '&.active') {
    $_performance-current-index: -1 !global;

    #{$active-selector} {
        @content;
    }
}

@mixin animate($animation-map) {
    $_performance-current-index: $_performance-current-index + 1 !global;

    $animation-list: ();

    @if type-of($animation-map) == map {
        @each $animation-index, $animation-name in $animation-map {
            $animation-list: append($animation-list, #{$animation-name} #{$performance-beat-duration} ease-in #{$animation-index * $performance-beat-duration}, comma);
        }
    }

    @debug $animation-list;

    -webkit-animation: $animation-list;
    -webkit-animation-fill-mode: forwards;
}

@mixin then-animate($name) {
    $_performance-current-index: $_performance-current-index + 1 !global;

    @include animation(
        $name: $name,
        $duration: $performance-beat-duration,
        $delay: $_performance-current-index * $performance-beat-duration
    );
}

@mixin and-animate($name) {
    @include animation(
        $name: $name,
        $duration: $performance-beat-duration,
        $delay: $_performance-current-index * $performance-beat-duration
    );
}