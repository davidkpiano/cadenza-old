//
// Global Grid Styles
// ==================
%content {
    padding: $x;
}
%grid {
    @extend %border-box;
    @include clearfix;
    margin: 0;
    display: block;
    position: relative;

    &.content { @extend %content; }
}
%column {
    @extend %grid;
    float: left;
    height: 100%;

    &.col-inline { height: auto; }
}
%row {
    @extend %grid;
    width: 100%;
}

//
// Horizontal Grid System
// ======================

@mixin columns($columns, $flex: true) {
    width: ($columns / $grid-columns) * 100% !important;

    @if $flex {    
        + .col-flex {
            width: (1 - ($columns / $grid-columns)) * 100%;
        }
    }
}

@mixin columnsOffset($columns) {
    margin-left: ($columns / $grid-columns * 100%);
}

@mixin columnsPosition($position) {
    @if $position == left {
        clear: right;
    } @else if $position == right {
        float: right;
        clear: left;
    } @else if $position == center {
        margin-left: auto;
        margin-right: auto;
        float: none;
    }
}

@mixin horizontalGridSystem($suffix: "") {
    $suffix-str: -#{$suffix} !default;
    @if $suffix == "" { $suffix-str: ""; }

    @for $i from 0 through $grid-columns {
        .col-#{$i}#{$suffix-str} {
            @include columns($i);
        }

        .col-offset-#{$i}#{$suffix-str} {
            @include columnsOffset($i);
        }    
    }

    @each $position in left, right, center {    
        .col-#{$position}#{$suffix-str} {
            @include columnsPosition($position);
        }
    }
}

#{$grid-column-selector} {
    @extend %column;
}

//
// Vertical Grid System
// ====================

@mixin rows($rows) {
    height: ($rows / $grid-rows) * 100%;

    + .row-flex {
        height: (1 - ($rows / $grid-rows)) * 100%;
    }
}

@mixin rowsOffset($rows) {
    // TODO: use calc? try to use margin
    top: ($rows / $grid-rows) * 100%;
}

@mixin rowsPosition($position) {
    @if $position == top {
        // todo... (see if necessary)
    } @else if $position == center {
        // todo...
    } @else if $position == bottom {
        position: absolute;
        bottom: 0;
        left: 0;
    }
}

@mixin verticalGridSystem($suffix: "") {
    $suffix-str: -#{$suffix} !default;
    @if $suffix == "" { $suffix-str: ""; }

    @for $i from 0 through $grid-rows {
        .row-#{$i}#{$suffix-str} {
            @include rows($i);
        }

        .row-offset-#{$i}#{$suffix-str} {
            @include rowsOffset($i);
        }
    }

    @each $position in top, bottom, center {    
        .row-#{$position}#{$suffix-str} {
            @include rowsPosition($position);
        }
    }
}

#{$grid-row-selector} {
    @extend %row;
}

//
// Full Grid System
// ================

@mixin gridSystem($suffix: "") {
    @include horizontalGridSystem($suffix);
    @include verticalGridSystem($suffix);
}

@media #{$mq-screen} { @include gridSystem; }
@media #{$mq-small} { @include gridSystem(small); }
@media #{$mq-medium} { @include gridSystem(medium); }
@media #{$mq-large} { @include gridSystem(large); }
@media #{$mq-short} { @include gridSystem(short); }
@media #{$mq-tall} { @include gridSystem(tall); }