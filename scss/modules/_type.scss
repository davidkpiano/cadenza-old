// Include Custom Types
@import url($type-custom-import);
@import url($type-secondary-import);

%type-primary {
    @if $type-use-custom {
        font-family: join($type-custom-font-family, $type-base-font-family);
    } @else {
        font-family: $type-base-font-family;
    }
}

%type-secondary {
    font-family: $type-secondary-font-family;
}

@mixin typeScaleRelative($exponent: 1, $ratio: $type-ratio) {
    font-size: percentage(pow($ratio, $exponent));
}

@mixin headings {
    h1, h2, h3, h4, h5, h6 {
        line-height: $type-header-line-height;
        font-weight: $type-header-font-weight;
        font-style: $type-header-font-style;
        font-family: join($type-header-font-family, $type-base-font-family);
        color: $type-header-color;
        margin-top: $type-header-margin-top;
        margin-bottom: $type-header-margin-bottom;

        &.subheader {
            color: $type-subheader-color;
            font-weight: $type-subheader-font-weight;
            margin-top: $type-subheader-margin-top;
            margin-bottom: $type-subheader-margin-bottom;
        }

        small {
            font-size: percentage(pow($type-ratio, 2));
        }

        &:only-child {
            margin-bottom: 0;
        }
    }

    @for $i from 1 through 6 {
        h#{$i} {
            @include typeScale(6 - $i);

            @if $i == 6 {
                text-transform: $type-header-small-style;
            }
        }
    }

    hgroup {
        > h1, > h2, > h3, > h4, > h5, > h6 {
            margin-bottom: 0;
        }

        margin-bottom: $hgroup-margin-bottom;
    }
}

html {
    font-size: $type-base-font-size;
}

body {
    @extend %type-primary;

    font-style: normal;
    color: $type-base-color;
    text-rendering: optimizeLegibility;
    word-wrap: break-word;

    @include experimental(hyphens, auto);
    @include headings;
}

.type-secondary { @extend %type-secondary; }


p {
    margin-bottom: $type-p-margin-bottom;
    line-height: $type-p-line-height;
    font-weight: $type-p-font-weight;

    &.lead {
        @include typeScale($type-p-lead-type-scale);
    }
}

// Text style classes
.strong {
    font-weight: bold;
}
.small {
    @include typeScale(-1);
}
.large {
    @include typeScale(1);
}


small {
    @extend .small;
}

// Lists

@mixin listStyle($type: inherit) {
    @if $type == none {
        list-style: none;
        margin-left: 0;
    } @else {
        list-style-type: $type;

        ul, ol {
            list-style: inherit;
        }
    }
}

%list-clean {
    @include listStyle(none);
}

ul, ol, dl {
    list-style-position: $type-list-position;
    margin-bottom: $type-list-margin-bottom;
    padding: 0;

    &.clean { @extend %list-clean; }

    // Inline lists
    &.inline {
        margin-left: 0;

        > li {
            @extend %nowrap;
            display: inline-block;
            margin-right: $type-list-inline-margin;
        }
    }

    // Nested lists
    & ul, ol, dl {
        margin-bottom: 0;
    }
}

ul {
    margin-left: $type-list-ul-margin;

    &.square { @include listStyle(square); }
    &.circle { @include listStyle(circle); }
    &.disc { @include listStyle(disc); }
}

ol {
    margin-left: $type-list-ol-margin;
}

li {
    list-style-position: $type-list-position;
}

dl {
    dt {
        font-weight: $type-list-dl-header-weight;
        margin-bottom: $type-list-dl-header-margin-bottom;
    }
    dd {
        margin-bottom: $type-list-dl-margin-bottom;
    }
}


// No Wrap
%nowrap {
    white-space: nowrap;
    overflow: hidden;
}

// Horizontal Alignment Classes
.align-left { text-align: left; }
.align-right { text-align: right; }
.align-center { text-align: center; }

// Hyphens
abbr, acronym, blockquote, code, dir, kbd, listing, plaintext, q, samp, tt, var, xmp {
    @include experimental(hyphens, none);
}

// Preformatted Text and Code Blocks
pre {
    white-space: pre;
    color: $type-pre-color;
    @include typeScale($type-pre-scale);
    font-family: $type-pre-font-family;

    code {
        word-wrap: normal;
        white-space: -moz-pre-wrap;
        white-space: pre-wrap;
    }
}

code {
    white-space: pre;
    color: $type-code-color;
    @include typeScale($type-code-scale);
    font-family: $type-code-font-family;
}

// Blockquotes
blockquote {
    color: $type-blockquote-color;
    padding: $type-blockquote-padding;
    border-left: $type-blockquote-border;
    margin-bottom: $type-blockquote-margin-bottom;

    cite {
        display: block;
        @include typeScale($type-blockquote-cite-scale);
        color: $type-blockquote-cite-color;
    }

    p {
        color: $type-blockquote-color;
    }
}

// Horizontal Rules
hr {
    clear: both;
    height: 0;
    margin: $hr-margin 0;
    border-style: $hr-border-style;
    border-color: $hr-border-color;
    border-width: $hr-border-width 0 0;
}

// Abbreviations
abbr, acronym {
    @if $type-abbr-transform == uppercase {
        @include typeScaleRelative(1);
    }

    text-transform: $type-abbr-transform;
    border-bottom: $type-abbr-border;
    cursor: $type-abbr-cursor;
}