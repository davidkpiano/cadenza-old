// 
// Themes Mixins and Functions
// ===========================

@mixin style(
    $component,
    $subcomponent: false,
    $style: $style-default,
    $theme: $theme-default,
    $exclude: false
) {
    $subcomponent: if($subcomponent, -#{$subcomponent}, '');
    $exclude: if($exclude, unquote(':not(#{$exclude})'), '');

    &#{$exclude} {    
        @extend %style-#{$component}-#{$style}#{$subcomponent} !optional;
        @extend %theme-#{$component}-#{$theme}#{$subcomponent} !optional;
    }
}

// TODO: add support for rgba() values! (alpha channel)
@function delta-color(
    $color,
    $type: false,
    $delta: 10%
) {
    @if type-of($color) == color {
        @if $type == darken {
            @return darken($color, $delta);
        } @else if $type == lighten {
            @return lighten($color, $delta);
        } @else {        
            @if is-dark($color) {
                @return darken($color, $delta);
            } @else {
                @return lighten($color, $delta);
            }
        }
    }

    @return false;
}

@function delta-lighten($color, $delta: 10%) {
    @return delta-color($color, lighten, $delta);
}

@function delta-darken($color, $delta: 10%) {
    @return delta-color($color, darken, $delta);
}

@function is-dark($color, $threshold: $theme-lightness-threshold) {
    @if type-of($color) == color and lightness($color) < $threshold {
        @return true;
    } @else {
        @return false;
    }
}

@function foreground-color(
    $color,
    $color-light: $color-light,
    $color-dark: $color-dark,
    $delta: 0%,
    $threshold: $theme-lightness-threshold
) {
    @if type-of($color) == color {
        @if lightness($color) > $threshold {
            @return $color-dark;
        } @else if lightness($color) <= $threshold {
            @return $color-light;
        }
    } @else {
        @return inherit;
    }
}

@function theme-mode(
    $color-light,
    $color-dark,
    $theme-mode: $theme-mode
) {
    @return if($theme-mode == 'light', $color-dark, $color-light);
}
