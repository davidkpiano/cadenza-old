

$components: ();
$static-component: null;

@mixin rules(
    $definition,
    $selector: &,
    $root: false
) {
    @if $root {
        @at-root #{$selector} {
            @each $property, $rule in $definition {
                #{$property}: #{$rule};
            }
        }
    } @else {
        #{$selector} {    
            @each $property, $rule in $definition {
                #{$property}: #{$rule};
            }
        }
    }

    @content;
}

@mixin define(
    $component,
    $definition,
    $placeholder: "%#{$component}"
) {
    $static-component: $component !global;

    $component-definition: ($component: (default: $definition));

    $components: map-merge($components, $component-definition) !global;

    @include rules($definition, $placeholder, true) {
        @content;
    }
}

@mixin variant(
    $variant,
    $definition,
    $component: $static-component,
    $placeholder: "%#{$component}#{if($variant == default, '', '-#{$variant}')}"
) {
    $variant-definition: ($variant: $definition);

    $component-map: map-get($components, $component);

    $component-map: map-merge($component-map, $variant-definition);

    $components: map-merge($components, ($component: $component-map)) !global;

    @include rules($definition, $placeholder, true) {
        @content;
    }
}

@mixin component(
    $name,
    $variant: default,
    $relationship: self
) {
    $component: map-get($components, $name);
    $definition: map-get($component, $variant);

    $variant: if($variant == default, '', '-#{$variant}');

    @include rules($definition, &) {
        @content;
    }
}