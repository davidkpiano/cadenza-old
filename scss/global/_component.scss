

$components: ();
$static-component: null;

@mixin rules($definition) {
    @each $property, $rule in $definition {
        #{$property}: #{$rule};
    }
}

@mixin define(
    $component,
    $definition
) {
    $static-component: $component !global;

    $component-definition: ($component: (default: $definition));

    $components: map-merge($components, $component-definition) !global;

    $placeholder: $component;

    @at-root %#{$placeholder} {
        @include rules($definition);
        @content;
    }
}

@mixin variant(
    $variant,
    $definition,
    $component: $static-component
) {
    $variant-definition: ($variant: $definition);

    $component-map: map-get($components, $component);

    $component-map: map-merge($component-map, $variant-definition);

    $components: map-merge($components, ($component: $component-map)) !global;

    $placeholder: #{$component}#{if($variant == default, '', '-#{$variant}')};

    @at-root %#{$placeholder} {
        @include rules($definition);
        @content;
    }
}

@mixin component($name, $variant: default) {
    $component: map-get($components, $name);
    $definition: map-get($component, $variant);

    $variant: if($variant == default, '', '-#{$variant}');

    @include rules($definition);
    @content;
}