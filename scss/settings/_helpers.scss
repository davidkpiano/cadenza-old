@mixin typeScale($exponent: 1, $important: false, $base: $type-base-font-size, $unit: $type-unit, $ratio: $type-ratio) {
    $_font-size: $base * pow(1 / $ratio, $exponent);
    $_important: "";

    @if $important {
        $_important: !important;
    }

    font-size: $_font-size #{$_important};
    font-size: ($_font-size / $base)#{$unit} #{$_important};
}

@mixin background(
    $color, 
    $threshold: $theme-lightness-threshold, 
    $color-dark: $color-dark, 
    $color-light: $color-light
) 
{
    $_color-foreground: $color-dark;
    $_color-shaded: darken($color, $theme-darken-percent);

    @if lightness($color) < $threshold {
        $_color-foreground: $color-light;
        $_color-shaded: lighten($color, $theme-lighten-percent);

        a {
            color: mix($color, $_color-foreground, $theme-mix-percent);

            &:hover { color: $_color-foreground; }
        }
    }

    background-color: $color;
    color: $_color-foreground;
}

// Button Extension
// ================

@mixin extButtonColors(
    $color: $color-primary,
    $color-text: $button-color-light,
    $color-text-hover: $color-text,
    $color-text-active: $color-text-hover,
    $color-text-disabled: $color-text-hover,
    $color-background: $color,
    $color-background-hover: darken($color-background, 7%),
    $color-background-active: darken($color-background-hover, 7%),
    $color-background-disabled: lighten($color-background, 7%),
    $color-border: darken($color, 7%),
    $color-border-hover: darken($color-border, 7%),
    $color-border-active: darken($color-border-hover, 7%),
    $color-border-disabled: lighten($color-border, 7%),
    $color-icon: $color-text,
    $color-icon-hover: $color-icon,
    $color-icon-active: $color-icon-hover,
    $color-icon-disabled: $color-icon,
    $color-outline: blue
) {
    background-color: $color-background;
    border-color: $color-border;

    @if $color-text == auto {
        color: foregroundColor($color);
    } @else {
        color: $color-text;
    }

    &:hover, &:focus {
        color: $color-text-hover;
        border-color: $color-border-hover;
        background-color: $color-background-hover;
    }

    &:active {
        color: $color-text-active;
        background-color: $color-background-active;
        border-color: $color-border-active;
    }
}

@mixin extAlertColors(
    $color: $color-primary,
    $color-text: $color-light,
    $color-link: mix($color, $color-light, 50%),
    $color-link-hover: darken($color-link, 10%),
    $color-border: darken($color, 10%)
) {
    background-color: $color;
    color: $color-text;
    border-color: $color-border;

    a {
        color: $color-link;
        &:hover { color: $color-link-hover; }
    }
}